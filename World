<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3D World with Five Zones</title>
    <style>
        body { margin: 0; overflow: hidden; }
        canvas { display: block; }
    </style>
</head>
<body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script>
        let scene, camera, renderer, controls;

        function init() {
            // Scene setup
            scene = new THREE.Scene();

            // Camera setup
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.z = 10;

            // Renderer setup
            renderer = new THREE.WebGLRenderer();
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.body.appendChild(renderer.domElement);

            // Lighting
            const light = new THREE.AmbientLight(0x404040);  // Ambient light
            scene.add(light);
            
            const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
            directionalLight.position.set(5, 5, 5).normalize();
            scene.add(directionalLight);

            // Create zones (5 distinct areas in the world)
            createZone(-4, 0, 0, 2, 0xff0000);  // Red zone
            createZone(4, 0, 0, 2, 0x00ff00);   // Green zone
            createZone(0, 0, -4, 2, 0x0000ff);  // Blue zone
            createZone(0, 0, 4, 2, 0xffff00);   // Yellow zone
            createZone(0, 4, 0, 2, 0xff00ff);   // Purple zone

            // Add camera controls for easy navigation
            controls = new THREE.OrbitControls(camera, renderer.domElement);

            // Resize handling
            window.addEventListener('resize', onWindowResize, false);
        }

        // Create a zone at the specified position with the given color
        function createZone(x, y, z, size, color) {
            const geometry = new THREE.BoxGeometry(size, size, size);
            const material = new THREE.MeshStandardMaterial({ color: color });
            const cube = new THREE.Mesh(geometry, material);

            cube.position.set(x, y, z);
            scene.add(cube);
        }

        // Handle window resizing
        function onWindowResize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        }

        // Animation loop
        function animate() {
            requestAnimationFrame(animate);
            controls.update();  // Update controls if they are being used
            renderer.render(scene, camera);
        }

        // Initialize and start the animation loop
        init();
        animate();
    </script>
</body>
</html>
